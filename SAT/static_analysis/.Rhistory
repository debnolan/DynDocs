coplot(sat ~ expend | frac, data = satDF, xlab = "Expenditure", ylab = "SAT score")
satDF = read.csv("http://www.stat.berkeley.edu/users/nolan/data/sat.csv")
?save
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT")
save(satDF, "satDF.rda")
save(satDF, satDF.rda)
save(satDF, file = "satDF.rda")
load(satDF.rda)
load("satDF.rda")
load("satDF.rda")
coplot(sat ~ expend | frac, data = satDF, xlab = "Expenditure", ylab = "SAT score")
View(satDF)
coplot(sat ~ salary | frac, data = satDF, xlab = "Expenditure", ylab = "SAT score")
summary(lm.SalFrac)
lm.SalFrac = lm(sat ~ salary + frac, data = satDF)
summary(lm.SalFrac)
lm.SalFrac = lm(sat ~ salary + frac, data = satDF)
summary(lm.SalFrac)
plot(sat ~ salary, data = satDF)
coplot(sat ~ salary | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
plot(sat ~ ratio, data = satDF)
coplot(sat ~ ratio | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
plot(sat ~ salary, data = satDF)
coplot(sat ~ salary | ratio, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
coplot(sat ~ salary | expend, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
View(satDF)
plot(math ~ salary, data = satDF)
coplot(math ~ salary | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
coplot(math ~ salary | ratio, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
coplot(math ~ expend | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
plot(math ~ expend, data = satDF)
coplot(math ~ expend | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
plot(math ~ expend, data = satDF)
plot(math ~ salary, data = satDF)
coplot(math ~ salary | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
coplot(math ~ salary | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
plot(math ~ salary, data = satDF)
coplot(math ~ salary | frac, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
load("../rda_data/satDF.rda")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/sat_analysis_0.1")
load("../rda_data/satDF.rda")
plot(sat ~ salary, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
lm.Ex = lm(sat ~ salary, data = satDF)
lm.Ex = lm(sat ~ salary, data = satDF)
abline(lm.Ex)
coplot(sat ~ salary | frac, data = satDF, xlab = "Salary", ylab = "SAT score")
frac_intervals = co.intervals(satDF$frac)
# write a function that extract 6 frac groups
split()
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_list = apply(frac_intervals, 1, frac_group)
lm_list = list()
for(i in 1:6){
lm_list[[i]] = lm(sat[frac_list[[i]]] ~ salary[frac_list[[i]]], data = satDF)
}
lm_summary_list = lapply(lm_list, summary)
## should we be checking individual regression significance?
plot(sat ~ salary, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
lm.Ex = lm(sat ~ salary, data = satDF)
abline(lm.Ex, lwd = 3)
for(i in 1:6){
}
abline(lm_list[[i]], col = "blue")
```
coplot(sat ~ salary | frac, data = satDF, xlab = "Salary", ylab = "SAT score")
frac_intervals = co.intervals(satDF$frac)
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_list = apply(frac_intervals, 1, frac_group)
lm_list = list()
for(i in 1:6){
lm_list[[i]] = lm(sat[frac_list[[i]]] ~ salary[frac_list[[i]]], data = satDF)
}
coplot(sat ~ salary | frac, data = satDF, xlab = "Salary", ylab = "SAT score")
frac_intervals = co.intervals(satDF$frac)
# write a function that extract 6 frac groups
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_list = apply(frac_intervals, 1, frac_group)
lm_list = list()
for(i in 1:6){
lm_list[[i]] = lm(sat[frac_list[[i]]] ~ salary[frac_list[[i]]], data = satDF)
}
frac_intervals
frac_list
lm_summary_list = lapply(lm_list, summary)
lm_summary_list
plot(sat ~ salary, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
lm.Ex = lm(sat ~ salary, data = satDF)
abline(lm.Ex, lwd = 3)
for(i in 1:6){
abline(lm_list[[i]], col = "blue")
}
?co.intervals
frac_intervals = co.intervals(satDF$frac, number = 6)
source('~/.active-rstudio-document', echo=TRUE)
frac_intervals = co.intervals(satDF$frac, number = 3)
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_list = apply(frac_intervals, 1, frac_group)
frac_list
lm_list = list()
for(i in 1:3){
lm_list[[i]] = lm(sat[frac_list[[i]]] ~ salary[frac_list[[i]]], data = satDF)
}
lm_summary_list = lapply(lm_list, summary)
plot(sat ~ salary, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
lm.Ex = lm(sat ~ salary, data = satDF)
abline(lm.Ex, lwd = 3)
for(i in 1:3){
abline(lm_list[[i]], col = "blue")
}
coplot(sat ~ salary | frac, data = satDF, xlab = "Salary", ylab = "SAT score")
frac_intervals = co.intervals(satDF$frac, number = 4)
# write a function that extract 6 frac groups
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_list = apply(frac_intervals, 1, frac_group)
lm_list = list()
for(i in 1:4){
lm_list[[i]] = lm(sat[frac_list[[i]]] ~ salary[frac_list[[i]]], data = satDF)
}
lm_summary_list = lapply(lm_list, summary)
## should we be checking individual regression significance?
plot(sat ~ salary, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
lm.Ex = lm(sat ~ salary, data = satDF)
abline(lm.Ex, lwd = 3)
for(i in 1:4){
abline(lm_list[[i]], col = "blue")
}
coplot(sat ~ salary | frac, data = satDF, xlab = "Salary", ylab = "SAT score")
frac_intervals = co.intervals(satDF$frac, number = 5)
# write a function that extract 6 frac groups
frac_group = function(interval_group, data = satDF$frac){
which(satDF$frac >= interval_group[1] & satDF$frac <= interval_group[2])
}
frac_list = apply(frac_intervals, 1, frac_group)
lm_list = list()
for(i in 1:5){
lm_list[[i]] = lm(sat[frac_list[[i]]] ~ salary[frac_list[[i]]], data = satDF)
}
lm_summary_list = lapply(lm_list, summary)
## should we be checking individual regression significance?
plot(sat ~ salary, data = satDF, xlab = "Teacher Salary", ylab = "SAT score")
lm.Ex = lm(sat ~ salary, data = satDF)
abline(lm.Ex, lwd = 3)
for(i in 1:5){
abline(lm_list[[i]], col = "blue")
}
source('~/.active-rstudio-document', echo=TRUE)
lm_summary_list
