hist(mse, breaks = 30)
r_sq <- apply(pal_sim, 2, function(x) cor(dna_vec, sort(x))^2)
r_sq
hist(r_sq)
dna_vec
cut(dna_vec, breaks = 10)
hist(dna_vec)
hist(dna_vec, breaks = 10)
hist = hist(dna_vec, breaks = 10)
hist$breaks
hist$counts
punif(20000, 1, 229354)
punif(20000, 1, 229354) * 296
hist$breaks[2]
exp_count = sapply(hist$breaks, function(e) punif(e, 1, 229354) * 296)[-1]
exp_count
hist = hist(dna_vec, breaks = 10)
obs_count = hist$counts
exp_count = sapply(hist$breaks, function(e) punif(e, 1, 229354) * 296)[-1]
chi_sq = sum(obs_count - exp_count)^2 / obs_count
chi_sq
chi_sq = sum((obs_count - exp_count)^2 / obs_count)
chi_sq
pal_sim <- replicate(100, sample(1:229354, 296, replace = FALSE))
hist = hist(dna_vec, breaks = 10)
obs_count = hist$counts
exp_count = sapply(hist$breaks, function(e) punif(e, 1, 10) * 296)[-1]
chi_sq = sum((obs_count - exp_count)^2 / obs_count)
chi_sq
exp_count = sapply(1:10, function(e) punif(e, 1, 10) * 296)
chi_sq = sum((obs_count - exp_count)^2 / obs_count)
obs_count = hist$counts
obs_count
length(obs_count)
hist = hist(dna_vec, breaks = 12)
obs_count = hist$counts
exp_count = sapply(1:12, function(e) punif(e, 1, 12) * 296)
chi_sq = sum((obs_count - exp_count)^2 / obs_count)
chi_sq
obs_count = hist$counts
obs_count
chi_sq = sum((obs_count - exp_count)^2 / exp_count)
chi_sq
exp_count
length(exp_count)
obs_count = hist$counts
obs_count
exp_count = sapply(2:12, function(e) punif(e, 1, 12) * 296)
chi_sq = sum((obs_count - exp_count)^2 / exp_count)
obs_count = hist$counts
obs_count
hist$breaks[-1]
exp_count = sapply(hist$breaks[-1], function(e) punif(e, 1, 12) * 296)
exp_count
dna_vec
matrix(dna_vec, col = 10)
matrix(dna_vec, ncol = 10)
296/100
296/10
296/13
296/12
296/11
296/3
296/2
/2
296/4
296/8
matrix(dna_vec, ncol = 8)
1/8
punif(1, 1, 8)
punif(1, 0, 8)
sapply(1:7, function(x) punif(x), 0, 8) * 298)
sapply(1:7, function(x) punif(x, 0, 8) * 298)
sapply(0:8, function(x) (punif(x, 0, 8) -  punif(x - 1, 0, 8))* 298)
seq
?seq
seq(1:229354, by = 10)
seq(1:229354, by = 229354/10)
229354/10
seq(1:229354, by = 22935)
seq(1:229354, by = 22935)
seq(1:229354, by = 22935)
seq(1:229354, by = 22935)
seq(1, 229354, by = 22935)
intv = seq(1, 229354, by = 22935)
length(intv)
intv = seq(1, 229354, by = 22935)[-1]
intv = seq(1, 229354, by = 22935)[-1]
intv
length(intv)
cut(dna_vec, breaks = intv)
intv
cut(dna_vec, breaks = intv)
intv = seq(1, 229354, by = 22935)
# count the number of palindromes in each interval
cut(dna_vec, breaks = intv)
dna_c <- cut(dna_vec, breaks = intv)
dna_c
table(dna_c)
count(dna_c)
dna_c
class(dna_c)
table(dna_c)
table(dna_c)[1]
levels(dna_c)
counts <- sapply(dna_c, count)
sapply
?sapply
dna_c
dna_c
table(dna_c)
class(table(dna_c))
as.matrix((table(dna_c))
as.matrix(table(dna_c))
dim(as.matrix(table(dna_c)))
counts <- as.vector(table(dna_c))
counts
exp_counts <- seq(1/10 * 296, length.out = 10)
exp_counts
exp_counts <- rep(1/10 * 296, length.out = 10)
exp_counts
chi_sq <- sum((obs_counts - exp_counts) ^ 2 / exp_counts)
intv = seq(1, 229354, by = 22935)
# count the number of palindromes in each interval
dna_c <- cut(dna_vec, breaks = intv)
obs_counts <- as.vector(table(dna_c))
# calculated the expected counts under uniform distribution
exp_counts <- rep(1/10 * 296, length.out = 10)
chi_sq <- sum((obs_counts - exp_counts) ^ 2 / exp_counts)
chi_sq
pchisq(chi_sq, df= 8)
p-value <- 1- pchisq(chi_sq, df = 9)
p_value <- 1- pchisq(chi_sq, df = 9)
p_value
hist(dna_vec)
hist(dna_vec, breaks = 10)
p_value <- 1- pchisq(chi_sq, df = 9)
p_value
chi_sq
exp_counts
qchisq(95, df = 9)
qchisq(.95, df = 9)
chi_sq
p_value <- 1- pchisq(chi_sq, df = 9)
p_value
qchisq(0.95, df = 9)
chi_sq
p_value <- 1- pchisq(chi_sq, 9)
p_value
pal_sim <- replicate(10, sample(1:229354, 296, replace = FALSE))
mfrow
?mfrow
par(mfrow=c(2,2))
hist(pal_sim[1])
pal_sim
par(mfrow=c(2,5))
apply(pal_sim, 2, hist)
qqplot
?qqplot
seq(1,229354, by = 2)
seq(1, 296, 2)
seq(2, 296, 2)
dna_vec[seq(1,296, by = 2)] - dna_vec[seq(2, 296, 2)]
sp_pair = dna_vec[seq(1,296, by = 2)] - dna_vec[seq(2, 296, 2)]
sp_pair
sp_pair = dna_vec[seq(2,296, by = 2)] - dna_vec[seq(1, 296, 2)]
sp_pair
hist(sp_pair)
sum_sp_pairs = sum(sp_pair)
sum_sp_pairs
set.seed(1001)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
means
boxplot(df, col = "blue")
set.seed(1001)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
medians = apply(samples, 2, median)
df = data.frame(means, medians)
boxplot(df, col = "blue")
boxplot(medians, col = "orange")
boxplot(df, col = "blue")
hist(means)
samples = replicate(100, rcauchy(25))
replicate
?replicate
dim(samples)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
medians = apply(samples, 2, median)
df = data.frame(means, medians)
boxplot(df, col = "blue")
hist(means)
hist(medians)
hist(means)
hist(medians)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
medians = apply(samples, 2, median)
df = data.frame(means, medians)
boxplot(df, col = "blue")
hist(means)
hist(medians)
hist(means)
set.seed(1)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
medians = apply(samples, 2, median)
# df = data.frame(means, medians)
# boxplot(df, col = "blue")
hist(means)
hist(medians)
hist(means)
hist(medians)
hist(y, col = "blue")
hist(dil_1, add = T, col = "orange")
# 6
x = strsplit("14.27 14.80 12.28 17.09 15.10 12.92 15.56 15.38 15.15 13.98 14.90 15.91 14.52 15.63 13.83 13.66 13.98 14.47 14.65 14.73 15.18 14.49 14.56 15.03 15.40 14.68 13.33 14.41 14.19 15.21 14.75 14.41 14.04 13.68 15.31 14.32 13.64 14.77 14.30 14.62 14.10 15.47 13.73 13.65 15.02 14.01 14.92 15.47 13.75 14.87 15.28 14.43 13.96 14.57 15.49 15.13 14.23 14.44 14.57", split = " ")
y = as.numeric(x[[1]])
plot(ecdf(y), main = "ecdf of the percentages of hydrocarbons",
xlab = "percentage of hydrocarbons")
hist(y, main = "histogram of the percentages of hydrocarbons" ,xlab = "percentage of hydrocarbons")
qqnorm(y, ylab="Observed Quantiles", xlab="Normal Scores", main="Normal Q-Q plot for percentages of hydrocarbons")
qqline(y, col = "red")
sapply(c(0.9, 0.75, 0.50, 0.25, 0.1), quantile, x = y)
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = "blue")
hist(dil_1, add = T, col = "orange")
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col = "blue", )
hist(dil_2, add = T, col = "orange")
dil_3 = y * 0.99 + 85 * 0.05
hist(y, col = "blue")
hist(dil_3, add = T, col = "orange")
sapply(c(0.9, 0.75, 0.50, 0.25, 0.1), quantile, x = y)
plot(ecdf(y), main = "ecdf of the percentages of hydrocarbons",
xlab = "percentage of hydrocarbons")
hist(y, main = "histogram of the percentages of hydrocarbons" ,xlab = "percentage of hydrocarbons")
qqnorm(y, ylab="Observed Quantiles", xlab="Normal Scores", main="Normal Q-Q plot for percentages of hydrocarbons")
qqline(y, col = "red")
\n
dil_1 = y * 0.99 + 85 * 0.01
hist(dil_1, add = T, col=rgb(0,0,1,0.5))
hist(y, col=rgb(1,0,0,0.5), xlim=c(0,10), ylim=c(0,200))
hist(dil_1, add = T, col=rgb(0,0,1,0.5))
y
hist(y)
hist(y, col=rgb(1,0,0,0.5), xlim=c(0,20), ylim=c(0,20))
hist(dil_1, add = T, col=rgb(0,0,1,0.5))
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col=rgb(1,0,0,0.5),xlim=c(min(dil_2), max(dil_2)))
hist(dil_2, add = T, col=rgb(0,0,1,0.5))
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col=rgb(1,0,0,0.5),xlim=c(min(dil_2), max(dil_2)), ylim=c(0,20))
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col=rgb(1,0,0,0.5),xlim=c(min(dil_2), max(dil_2)), ylim=c(0,20))
hist(dil_2, add = T, col=rgb(0,0,1,0.5))
hist(y, col=rgb(1,0,0,0.5),xlim=c(min(y), max(dil_2)), ylim=c(0,20))
hist(y, col=rgb(1,0,0,0.5), xlim = c(min(y), max(dil_2)), ylim = c(0,20))
hist(y, col=rgb(1,0,0,0.5), xlim = c(min(y), max(dil_2)), ylim = c(0,20))
hist(dil_2, add = T, col=rgb(0,0,1,0.5))
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col=rgb(1,0,0,0.5), xlim = c(min(y), max(dil_2) + 2), ylim = c(0,20))
hist(dil_2, add = T, col=rgb(0,0,1,0.5))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(0, 20), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y), max(dil_1)), ylim = c(0, 20))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y), max(dil_1)), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 2, max(dil_1) -2 ), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 2, max(dil_1) + 2), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 2, max(dil_1) + 1), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20))
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histogram of 1 % diluted and non-diluted beewax")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
```
```{r echo = F}
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col=rgb(1,0,0,0.5), xlim = c(min(y), max(dil_2) + 2), ylim = c(0, 20),
main = "overlapping histogram of 3 % diluted and non-diluted beewax")
hist(dil_2, add = T, col = rgb(0,0,1,0.5))
```
dil_3 = y * 0.99 + 85 * 0.05
hist(y, col = rgb(1,0,0,0.5),xlim = c(0,10), ylim = c(0,200),
main = "overlapping histogram of
5 % diluted and non-diluted beewax")
hist(dil_3, add = T, col = rgb(0,0,1,0.5))
dil_3 = y * 0.99 + 85 * 0.05
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_3) + 2), ylim = c(0,20),
main = "overlapping histogram of
5 % diluted and non-diluted beewax")
hist(dil_3, add = T, col = rgb(0,0,1,0.5))
set.seed(1)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
medians = apply(samples, 2, median)
# df = data.frame(means, medians)
# boxplot(df, col = "blue")
hist(means)
hist(medians)
dil_2 = y * 0.99 + 85 * 0.03
hist(y, col=rgb(1,0,0,0.5), xlim = c(min(y), max(dil_2) + 2), ylim = c(0, 20),
main = "overlapping histogram of
3 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_2, add = T, col = rgb(0,0,1,0.5))
dil_3 = y * 0.99 + 85 * 0.05
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_3) + 2), ylim = c(0,20),
main = "overlapping histograms of
5 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons"  )
hist(dil_3, add = T, col = rgb(0,0,1,0.5))
tt = rexp(100)
sds = sqrt((1 - exp(- tt))/ exp(- tt)/ 100)
plot(tt, sds, xlab = "t", ylab = "SD of log(Sn(t))",
main = "Approximate SD of Empirical log Survivial Function)")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
plot(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
plot(samp0, log(1-Fn), type = "l", xlab = "t")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
plot(samp0, log(1-Fn), type = "l", xlab = "t")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
plot(samp0, log(1-Fn), type = "l", xlab = "t")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
samp0 = sort(rexp(100))
Fn = sort(ecdf(samp0)(samp0))
lines(samp0, log(1-Fn), type = "l")
set.seed(1)
samples = replicate(100, rcauchy(25))
means = apply(samples, 2, mean)
medians = apply(samples, 2, median)
# df = data.frame(means, medians)
# boxplot(df, col = "blue")
hist(means)
hist(medians)
hist(means)
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)
legend("topright", c("non-dilution", "1% dilution"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
legend("topright", c("non-dilution", "1% dilution"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
dil_1 = y * 0.99 + 85 * 0.01
xx = rgb(1,0,0,0.5)
yy = rgb(0,0,1,0.5)
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), col = c(xx, yy))
dil_1 = y * 0.99 + 85 * 0.01
xx = rgb(1,0,0,0.5)
yy = rgb(0,0,1,0.5)
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), col = c("xx", "yy"))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), col = c("red", "blue"))
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"),
col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
plot
?plot
legend("topright", c("non-dilution", "1% dilution"), col = c("red", "blue"))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), col = c("red", "blue"))
legend("topright", c("non-dilution", "1% dilution"), lty=2, col = c("red", "blue"))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), box.col = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
legend("topright", c("non-dilution", "1% dilution"), fill = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
dil_1 = y * 0.99 + 85 * 0.01
hist(y, col = rgb(1,0,0,0.5), xlim = c(min(y) - 1, max(dil_1) + 1), ylim = c(0, 20),
main = "overlapping histograms of
1 % diluted and non-diluted beeswax", xlab = "percentages of hydrocarbons")
hist(dil_1, add = T, col = rgb(0,0,1,0.5))
legend("topright", c("non-dilution", "1% dilution"), fill = c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
hist(means)
hist(medians)
hist(means)
hist(medians)
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/doc_0.1")
library(shiny)
runApp("SATapp/")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/syn_doc_0.1/")
library(shiny)
runApp("SATapp/")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/syn_doc_0.1/")
library(shiny)
runApp("SATapp/")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/syn_doc_0.1/")
library(shiny)
runApp("SATapp/")
library("shinyRGL")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/individual_shiny_apps/3Dplot")
library(shiny)
runApp("3D_plot_0.1/")
library("shinyRGL")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/individual_shiny_apps/3Dplot")
library(shiny)
runApp("3D_plot_0.1/")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/syn_doc_0.1/")
library(shiny)
runApp("SATapp/")
