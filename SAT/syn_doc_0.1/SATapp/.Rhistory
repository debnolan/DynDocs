INNER JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
HAVING Ser.round = 'WS'
;"
TestData = dbGetQuery(con, statement = query1)
View(TestData)
query1 = "SELECT Sal.teamID AS team, Sal.lgID AS league, Sal.yearID AS year, SUM(Sal.salary) AS payroll, Ser.round AS round
FROM Salaries AS Sal
INNER JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
HAVING Ser.round = 'WS', Ser.yearID= Sal.yearID, Sal.teamID = Ser.ID
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Sal.teamID AS team, Sal.lgID AS league, Sal.yearID AS year, SUM(Sal.salary) AS payroll, Ser.round AS round
FROM Salaries AS Sal
INNER JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
HAVING Ser.round = 'WS', Ser.yearID = Sal.yearID, Sal.teamID = Ser.ID
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Sal.teamID AS team, Sal.lgID AS league, Sal.yearID AS year, SUM(Sal.salary) AS payroll, Ser.round AS round
FROM Salaries AS Sal
INNER JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
HAVING Ser.round = 'WS' AND Ser.yearID = Sal.yearID AND Sal.teamID = Ser.ID
;"
TestData = dbGetQuery(con, statement = query1)
dbGetQuery(con, statement = "SELECT teamIDwinner, round, yearID  FROM SeriesPost
HAVING round = 'WS'
")
dbListFields(con, "SeriesPost" )
query1 = "SELECT Sal.teamID AS team, Sal.lgID AS league, Sal.yearID AS year, SUM(Sal.salary) AS payroll, Ser.round AS round
FROM Salaries AS Sal
INNER JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
HAVING Ser.round = 'WS' AND Ser.yearID = Sal.yearID AND Sal.teamID = Ser.teamIDwinner
;"
TestData = dbGetQuery(con, statement = query1)
dbListFields(con, "SeriesPost" )
dbGetQuery(con, statement = "SELECT teamIDwinner, round, yearID  FROM SeriesPost
HAVING round = 'WS'
")
query1 = "SELECT Sal.teamID AS team, Sal.lgID AS league, Sal.yearID AS year, SUM(Sal.salary) AS payroll, Ser.round AS round
FROM Salaries AS Sal
INNER JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
HAVING Ser.round = 'WS' AND Ser.yearID = Sal.yearID AND Sal.teamID = Ser.teamIDwinner
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Sal.teamID AS team, Sal.lgID AS league, Sal.yearID AS year, SUM(Sal.salary) AS payroll, Ser.round AS round
FROM Salaries AS Sal
LEFT JOIN SeriesPost AS Ser
GROUP BY Sal.teamID, Sal.yearID
WHERE Ser.round = 'WS'
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
GROUP BY Sal.teamID, Sal.yearID
WHERE SeriesPost.round = 'WS'
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
GROUP BY Sal.teamID, Sal.yearID
ON SeriesPost.round = 'WS'
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
ON SeriesPost.round = 'WS'
;"
TestData = dbGetQuery(con, statement = query1)
View(TestData)
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
ON SeriesPost.round = 'WS'
GROUP BY Sal.teamID, Sal.yearID
;"
TestData = dbGetQuery(con, statement = query1)
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
ON SeriesPost.round = 'WS'
GROUP BY Salaries.teamID, Salaries.yearID
;"
TestData = dbGetQuery(con, statement = query1)
View(TestData)
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
ON SeriesPost.round = 'WS' AND Salaries.yearID = SeriesPost.yearID AND Salaries.teamID = SeriesPost.teamIDwinner
GROUP BY Salaries.teamID, Salaries.yearID
;"
TestData = dbGetQuery(con, statement = query1)
View(TestData)
DataQ2 = dbGetQuery(con, statement = query1)
DataQ1 = dbGetQuery(con, statement = query)
View(DataQ2)
payroll = dbGetQuery(con, statement = query1)
save(payroll, file = "payroll.rda")
inflation = c(1, 0.96, 0.95, 0.91, 0.87, 0.84, 0.79, 0.76, 0.74,
0.72, 0.70, 0.69, 0.66, 0.65, 0.64, 0.63, 0.61, 0.60, 0.58,
0.57, 0.55, 0.54, 0.52, 0.50, 0.50, 0.49, 0.48, 0.47, 0.46, 0.45)
names(inflation) = 1985:2014
drv = dbDriver("MySQL")
con = dbConnect(drv, user = "s133",
dbname = "lahman",
password = "s133",
host = "radagast.berkeley.edu")
dbListTables(con)
dbListFields(con, "Salaries")
dbListTables(con, "SeriesPost")
query = "SELECT teamID AS team, lgID AS league, yearID AS year, SUM(salary) AS payroll FROM Salaries
GROUP BY teamID, yearID;"
DataQ1 = dbGetQuery(con, statement = query)
dbGetQuery(con, statement = "SELECT teamIDwinner, round, yearID  FROM SeriesPost
HAVING round = 'WS'
")
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
ON SeriesPost.round = 'WS' AND Salaries.yearID = SeriesPost.yearID AND Salaries.teamID = SeriesPost.teamIDwinner
GROUP BY Salaries.teamID, Salaries.yearID
;"
payroll = dbGetQuery(con, statement = query1)
save(payroll, file = "payroll.rda")
load("payroll.rda")
inflation = c(1, 0.96, 0.95, 0.91, 0.87, 0.84, 0.79, 0.76, 0.74,
0.72, 0.70, 0.69, 0.66, 0.65, 0.64, 0.63, 0.61, 0.60, 0.58,
0.57, 0.55, 0.54, 0.52, 0.50, 0.50, 0.49, 0.48, 0.47, 0.46, 0.45)
names(inflation) = 1985:2014
payroll
View(payroll)
names(inflation) = 1985:2014
inflation
class(inflation)
inflation
View(payroll)
inflation[1]
inflation[[1]]
inflation[1]
inflation[]
inflation[2]
inflation[2, 1]
inflation[1]
inflation[[1]]
length(inflation)
inflation[[30]]
inflation[30]
Payroll = dbGetQuery(con, statement = query1)
save(Payroll, file = "payroll.rda")
load("payroll.rda")
View(Payroll)
inflation = c(1, 0.96, 0.95, 0.91, 0.87, 0.84, 0.79, 0.76, 0.74,
0.72, 0.70, 0.69, 0.66, 0.65, 0.64, 0.63, 0.61, 0.60, 0.58,
0.57, 0.55, 0.54, 0.52, 0.50, 0.50, 0.49, 0.48, 0.47, 0.46, 0.45)
names(inflation) = 1985:2014
length(inflation)
View(Payroll)
name(inflation)
names(inflation)
Payroll$year == names(inflation)
length(inflation)
inflation[30]
inflation[30]
inflation[30]
inflation[30] == 2014
inflation[30] == 2014
inflation[30] == 2014
inflation[30, 1] == 2014
inflation[30] == 2014
names(inflation)
names(inflation)[1]
inflation[Payroll$year]
names(inflation[Payroll$year])
inflation(1985)
inflation[1985]
inflation[[1985]]
inflation[1985]
inflation["1985"]
inflation["Payroll$year"]
inflation[Payroll$year]
names(inflation[Payroll$year])
names(as.character(inflation[Payroll$year]))
names(inflation[as.character(Payroll$year)])
inflation[as.character(Payroll$year)
inflation[as.character(Payroll$year)]
length(inflation[as.character(Payroll$year)])
inflation[as.character(Payroll$year)]
inflation[as.character(Payroll$year)]
Payroll$InflationRate = inflation[as.character(Payroll$year)]
View(Payroll)
Payroll$payroll * Payroll$InflationRate
Payroll$AdjustPayroll = Payroll$payroll * Payroll$InflationRate
Payroll$payroll * Payroll$InflationRate
Payroll$AdjustPayroll
length(inflation[as.character(Payroll$year)])
Payroll$InflationRate = inflation[as.character(Payroll$year)]
Payroll$AdjustPayroll = Payroll$payroll * Payroll$InflationRate
View(Payroll)
Payroll$AdjustPayroll = (Payroll$payroll * Payroll$InflationRate)/1000000
View(Payroll)
dbListTables(con)
dbListFields(con, "SeriesPost" )
dbListTables(con)
dbListFields(con, "SeriesPost" )
drv = dbDriver("MySQL")
con = dbConnect(drv, user = "s133",
dbname = "lahman",
password = "s133",
host = "radagast.berkeley.edu")
dbListTables(con)
dbListFields(con, "Salaries")
dbListTables(con, "SeriesPost")
query = "SELECT teamID AS team, lgID AS league, yearID AS year, SUM(salary) AS payroll FROM Salaries
GROUP BY teamID, yearID;"
DataQ1 = dbGetQuery(con, statement = query)
dbListTables(con)
dbListFields(con, "SeriesPost" )
dbGetQuery(con, statement = "SELECT teamIDwinner, round, yearID  FROM SeriesPost
HAVING round = 'WS'
")
query1 = "SELECT Salaries.teamID AS team, Salaries.lgID AS league, Salaries.yearID AS year, SUM(Salaries.salary) AS payroll, SeriesPost.round AS round
FROM Salaries
LEFT JOIN SeriesPost
ON SeriesPost.round = 'WS' AND Salaries.yearID = SeriesPost.yearID AND Salaries.teamID = SeriesPost.teamIDwinner
GROUP BY Salaries.teamID, Salaries.yearID
;"
Payroll = dbGetQuery(con, statement = query1)
#Question 3
save(Payroll, file = "payroll.rda")
#Question 4
load("payroll.rda")
inflation = c(1, 0.96, 0.95, 0.91, 0.87, 0.84, 0.79, 0.76, 0.74,
0.72, 0.70, 0.69, 0.66, 0.65, 0.64, 0.63, 0.61, 0.60, 0.58,
0.57, 0.55, 0.54, 0.52, 0.50, 0.50, 0.49, 0.48, 0.47, 0.46, 0.45)
names(inflation) = 1985:2014
Payroll$InflationRate = inflation[as.character(Payroll$year)]
Payroll$AdjustPayroll = (Payroll$payroll * Payroll$InflationRate)/1000000
dbListTables(con)
dbListFields(con, "Salaries")
View(DataQ1)
list(Payroll$league)
levels(Payroll$league)
sum(Payroll$league)
summary(Payroll$league)
summary(Payroll$league[ML])
summary(Payroll$league[NL])
summary(Payroll$league["NL"])
summary(Payroll$league["AL"])
plot(Payroll$AdjustPayroll, Payroll$year)
View(Payroll)
plot(Payroll$AdjustPayroll~ Payroll$year)
plot(Payroll$AdjustPayroll~ Payroll$year)
source('~/.active-rstudio-document', echo=TRUE)
par(main = "Adjusted Payroll for Teams in Baseball")
title(main = "Adjusted Payroll for Teams in Baseball")
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars")
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year")
par(pch= 1)
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year")
par(pch= 1)
title(main = "Adjusted Payroll for Teams in Baseball")
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 1)
par(pch= 1)
title(main = "Adjusted Payroll for Teams in Baseball")
par(pch= 20)
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20)
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball")
par(pch = 1)
plot(Payroll$AdjustPayroll~ Payroll$year, ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball")
jitter(Payroll$year)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball")
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball")
rgb(190, 190, 190, 150, max = 256)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(190, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(10, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(100, 190, 190, 150, max = 256))
par()
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(20, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(10, 190, 190, 150, max = 256))
par()
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(10, 10, 190, 150, max = 256))
par()
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(10, 20, 190, 150, max = 256))
par()
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(190, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(10, 190, 10, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(10, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 1, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 1, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 1, 1, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 1, max = 256))
par()
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 10, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 190, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 1500, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 150, max = 256))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = rgb(1, 190, 190, 190, max = 256))
transBlue = rgb(1, 190, 190, 190, max = 256)
Payroll$league
as.factor(Payroll$league)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = c(transGray, transBlue) )
transGray = rgb(190, 190, 190, 150, max = 256)
transBlue = rgb(1, 190, 190, 190, max = 256)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = c(transGray, transBlue) )
View(Payroll)
points(Payroll$round, col= "red", pch= 20)
Payroll$round
as.factor(Payroll$round)
class(Payroll$league)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = c(transGray, transBlue))
points(Payroll$round, col= "red", pch= 20)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = c(transGray, transBlue))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = c(transGray, transBlue))
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Teams in Baseball", col = c(transGray, transBlue))
as.factor(Payroll$round)
class(as.factor(Payroll$round))
as.factor(Payroll$round)[1]
as.factor(Payroll$round)[2]
points(Payroll$round == "WS", Payroll$year, col= "red", pch= 20)
points(Payroll$year, Payroll$round == "WS", col= "red", pch= 20)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transGray, transBlue))
points(Payroll$year, Payroll$round == "WS", col= "red", pch= 20)
points(Payroll$round == "WS", col= "red", pch= 20)
Payroll$year[Payroll$round == "WS"]
points(Payroll$year[Payroll$round == "WS"], col= "red", pch= 20)
points(Payroll$AdjustedPayroll[Payroll$round == "WS"], Payroll$year[Payroll$round == "WS"], col= "red", pch= 20)
Payroll$AdjustedPayroll[Payroll$round == "WS"]
Payroll$AdjustedPayroll
View(Payroll)
Payroll$AdjustPayroll
points(Payroll$AdjustPayroll[Payroll$round == "WS"], Payroll$year[Payroll$round == "WS"], col= "red", pch= 20)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transGray, transBlue))
points(Payroll$AdjustPayroll[Payroll$round == "WS"], Payroll$year[Payroll$round == "WS"], col= "red", pch= 20)
points(Payroll$AdjustPayroll[Payroll$round == "WS"], Payroll$year[Payroll$round == "WS"], col= "red", pch= 20)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, text = Payroll$team[Payroll$round == "WS"],)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, text = Payroll$team[Payroll$round == "WS"])
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"])
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"])
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transGray, transBlue))
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 1)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transGray, transBlue))
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 10)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transGray, transBlue))
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
legend( legend = c("AL", "NL"), fill = c(transGray, transBlue) )
legend( pos = 1, legend = c("AL", "NL"), fill = c(transGray, transBlue) )
mtext("Blue points are teams in the American League, Gray points are those the National League")
mtext(side = 1, "Blue points are teams in the American League, Gray points are those the National League")
mtext(side = 1, outer = T,  "Blue points are teams in the American League, Gray points are those the National League")
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transGray, transBlue))
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
mtext(side = 1, outer = T,  "Blue points are teams in the American League, Gray points are those the National League")
mtext(side = 1, outer = T,  "Blue points are teams in the American League, Gray points are those the National League")
mtext(side = 1,  "Blue points are teams in the American League, Gray points are those the National League")
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = transGray)
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
transGray = rgb(190, 190, 190, 150, max = 256)
transBlue = rgb(1, 190, 190, 190, max = 256)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transBlue, transGray)[Payroll$league] )
c(transBlue, transGray)[Payroll$league]
[Payroll$league]
Payroll$league
as.factor(Payroll$league)
c(transBlue, transGray)(as.factor(Payroll$league))
c(transBlue, transGray)[as.factor(Payroll$league)]
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transBlue, transGray)[as.factor(Payroll$league)] )
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
as.factor(Payroll$league)
load("payroll.rda")
inflation = c(1, 0.96, 0.95, 0.91, 0.87, 0.84, 0.79, 0.76, 0.74,
0.72, 0.70, 0.69, 0.66, 0.65, 0.64, 0.63, 0.61, 0.60, 0.58,
0.57, 0.55, 0.54, 0.52, 0.50, 0.50, 0.49, 0.48, 0.47, 0.46, 0.45)
load("payroll.rda")
inflation = c(1, 0.96, 0.95, 0.91, 0.87, 0.84, 0.79, 0.76, 0.74,
0.72, 0.70, 0.69, 0.66, 0.65, 0.64, 0.63, 0.61, 0.60, 0.58,
0.57, 0.55, 0.54, 0.52, 0.50, 0.50, 0.49, 0.48, 0.47, 0.46, 0.45)
names(inflation) = 1985:2014
Payroll$InflationRate = inflation[as.character(Payroll$year)]
Payroll$AdjustPayroll = (Payroll$payroll * Payroll$InflationRate)/1000000
transGray = rgb(190, 190, 190, 150, max = 256)
transBlue = rgb(1, 190, 190, 190, max = 256)
as.factor(Payroll$league)
plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transBlue, transGray)[as.factor(Payroll$league)] )
points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
mtext(side = 1,  "Blue points are teams in the American League, Gray points are those the National League")
MainGraph = plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transBlue, transGray)[as.factor(Payroll$league)] )
RedPoints = points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
PointLabel = text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
MainGraph = plot(Payroll$AdjustPayroll~ jitter(Payroll$year), ylab= "Inflation Adjusted Payrolls in Millions of Dollars", xlab = "Year", pch = 20, main = "Adjusted Payroll for Professional Baseball Teams", col = c(transBlue, transGray)[as.factor(Payroll$league)] )
RedPoints = points(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], col= "red", pch= 20, cex = 1.1)
PointLabel = text(Payroll$year[Payroll$round == "WS"], Payroll$AdjustPayroll[Payroll$round == "WS"], labels = Payroll$team[Payroll$round == "WS"], cex = 0.5, pos = 3)
TextLabel = mtext(side = 1,  "Blue points are teams in the American League, Gray points are those the National League")
save.image(file = "Graph.RData")
pdf(file = "Graph.RData")
pdf(file = "Graph.RData")
rootN[[1]]
library("XML")
doc = xmlParse("http://data.sfgov.org/OData.svc/tmnf-yvry")
rootN = xmlRoot(doc)
xmlSize(rootN)
names(rootN)
rootN[[1]]
rootN[[2]]
rootN[[3]]
rootN[[4]]
xpathSApply(rootN, '//entry[@d:category = "BURGLARY"]', xmlGetAttr, namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue = xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
duedue = xpathSApply(rootN, '//entry//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
rootN[[5]]
duedue = xpathSApply(rootN, '/m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
duedue = xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
duedue = xpathSApply(rootN, '//d:category', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
duedue = xpathSApply(rootN, '//d:category', xmlGetAttr, "", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
duedue = xpathSApply(rootN, '//d:category', xmlGetAttr, namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
duedue = xpathSApply(rootN, '//d:category', xmlGetAttr, "d:descript" ,  namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
xpathSApply(rootN, '//[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category" namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices"))
xpathSApply(rootN, '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices"))
rootN
rootN[[22]]
rootN[[23]]
rootN[[27]]
xpathSApply(rootN[[7]], '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices"))
xpathSApply(rootN[[7]], '//d:category[@category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices"))
:
xpathSApply(rootN[[7]], '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices"))
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c("m", "d"))
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//entry/m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//entry//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
rootN = xmlRoot(doc, skip = F)
rootN[[1]]
rootN[[2]]
rootN[[3]]
rootN[[4]]
rootN[[27]]
xpathSApply(rootN[[7]], '//d:category[@d:category = "BURGLARY"]', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices"))
duedue = xpathSApply(rootN, '//d:category', xmlGetAttr, "d:descript" ,  namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
xpathSApply(rootN, '//m:properties', xmlGetAttr, "d:category", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c(d="http://schemas.microsoft.com/ado/2007/08/dataservices", m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"))
duedue
xpathSApply(rootN, '//m:properties[@d:category = "ASSAULT"]', xmlGetAttr, "d:time", namespaces = c("m", "d"))
xpathSApply(rootN, '//field[@name = "Infant mortality rate"]/rank', xmlGetAttr, "number")
?data.frame()
satDF = read.csv("http://www.stat.berkeley.edu/users/nolan/data/sat.csv")
View(satDF)
max(satDF$sat)
install.packages(Shiny)
install.packages(shiny)
install.packages("shiny")
png("myPlot.png")
plot(1:10)
dev.off(1)
dev.off()
satDF = read.csv("http://www.stat.berkeley.edu/users/nolan/data/sat.csv")
x = rnorm(5,)
x
x = rnorm(50,)
y= 1:50
plot(y~x)
library(ggplot2)
qplot(y~x)
qplot(x, y)
plot(y~x)
qplot(x, y)
setwd("~/DynDocs/SAT/syn_doc_0.1/")
library(shiny)
runApp("SATapp/")
runApp("SATapp/")
runApp("SATapp/")
