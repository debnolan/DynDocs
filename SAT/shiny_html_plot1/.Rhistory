x1 <- c(2, 3, 4, 5)
source('~/.active-rstudio-document', echo=TRUE)
Atotal = (day1Ahit + day2Ahit)/350
day1Ahit_per = day1Ahit/day1A
day1Bhit_per = day1Bhit/day1B
day2Ahit_per = day2Ahit/day2A
day2Bhit_per = day2Bhit/day2B
table = matrix(c(day1Ahit_per, day1Bhit_per, day2Ahit_per, day2Bhit_per, Atotal, Btotal), byrow = T, ncol = 2,
dimnames = list(c("Day1","Day2","Both Days"), c("Treatment A", "Treatment B")))
Atotal = (day1Ahit + day2Ahit)/350
Btotal = (day1Bhit + day2Bhit)/350
x1 <- c(2, 3, 4, 5)
y1 <- x1 + 5
x2 <- x1 + 7
y2 <- x2 - 7
x <- c(x1, x2)
y <- c(y1, y2)
par(xaxs = "i", yaxs = "i")
plot(x,y, cex = 2, pch = 19,
col = rep(c("blue", "orange"), each = 4), bg = rep(c("blue", "orange"), each = 4),
xlim = c(0 , 14), ylim = c(0 , 12))
abline(lm(y1 ~ x1), col="blue", lwd = 3, lty =3)
abline(lm(y2 ~ x2), col="orange", lwd = 3, lty = 3)
abline(lm(y  ~ x), lwd = 2, lty = 1)
x1 <- c(2, 3, 4, 5)
y1 <- x1 + 5
x2 <- x1 + 7
y2 <- x2 - 7
library(shiny)
runExample("05_sliders")
library(shiny)
runExample()
library(shiny)
runExample("08_html")
library(shiny)
runExample("07_widgets")
library(shiny)
runExample("07_widgets")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_html_table1/")
library(shiny)
runApp("show_data_app/")
runExample("08_html")
runExample("03_reactivity")
library(shiny)
runExample("04_mpg")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_plot1_0.3/")
runExample("03_reactivity")
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_html_plot1/")
library(shiny)
runApp("side_by_side_scatterplot/")
load("../rda_data/satDF.rda")
View(satDF)
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_plot1_0.1")
load("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/satDF.rda")
# data manipulation for easy use of ggplot
# add state.region to satDF
satDF$Region = state.region
# scrape state population data from website
# https://www.census.gov/popest/data/state/totals/1990s/tables/ST-99-03.txt
x = readLines("1995_state_population.txt")
x = x[14:78]
statenames = gsub("[^[:alpha:]]", "", x)
pop = strsplit(x, split = " ")
pop = sapply(pop, function(e) e[length(e)])
# remove extra district Columbia
statenames = statenames[-23]
pop = pop[-23]
pop = as.numeric(as.character(pop))
population_df = data.frame(statenames, pop)
# combine population_df[15:65, ] with satDF
satDF_new = cbind(satDF, StatePopulation = population_df[15:64, 2])
View(satDF_new)
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/")
load("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/satDF.rda")
satDF$region = state.region
x = readLines("1995_state_population.txt")
x = x[14:78]
statenames = gsub("[^[:alpha:]]", "", x)
pop = strsplit(x, split = " ")
pop = sapply(pop, function(e) e[length(e)])
# remove extra district Columbia
statenames = statenames[-23]
pop = pop[-23]
pop = as.numeric(as.character(pop))
population_df = data.frame(statenames, pop)
# combine population_df[15:65, ] with satDF
satDF_new = cbind(satDF, population = population_df[15:64, 2])
View(satDF_new)
satDF_one = cbind(satDF, population = population_df[15:64, 2])
save(satDF_one, file = "satDF_one.rda")
View(satDF_new)
load("/Users/Zeyu/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/satDF_new.rda")
View(satDF_new)
View(satDF_one)
load("/Users/Zeyu/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/satDF_one.rda")
View(satDF_one)
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_reactivity_test/")
shinyAppDir(appDir = "my_app/", options = list(
width="100%", height=650
))
load("../rda_data/satDF_one.rda")
getwd
getwd()
setwd("/Users/Zeyu/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_reactivity_test")
load(file = "../rda_data/satDF_one.rda")
subset(satDF_one, select = c(expend, sat, region, population))
satDF$region = state.region
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/")
load("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/rda_data/satDF.rda")
satDF$region = state.region
x = readLines("1995_state_population.txt")
x = x[14:78]
statenames = gsub("[^[:alpha:]]", "", x)
pop = strsplit(x, split = " ")
pop = sapply(pop, function(e) e[length(e)])
x = readLines("1995_state_population.txt")
x = x[14:78]
x = readLines("1995_state_population.txt")
x = readLines("../shiny_plot1_0.1/1995_state_population.txt")
x = readLines("1995_state_population.txt")
x = x[14:78]
statenames = gsub("[^[:alpha:]]", "", x)
pop = strsplit(x, split = " ")
pop = sapply(pop, function(e) e[length(e)])
# remove extra district Columbia
statenames = statenames[-23]
pop = pop[-23]
pop = as.numeric(as.character(pop))
population_df = data.frame(statenames, pop)
# combine population_df[15:65, ] with satDF
satDF_one = cbind(satDF, population = population_df[15:64, 2])
satDF_one
save(satDF_one, file = "satDF_one.rda")
subset(satDF_one, select = c(expend, sat, region, population))
dataset = subset(satDF_one, select = c(expend, sat, region, population))
p <- ggplot(dataset, aes(x = expend, y = sat, size = sqrt(population/pi),
colour = region,
label = State))
p <- ggplot(dataset, aes(x = expend, y = sat, size = sqrt(population/pi),
colour = region,
label = State))
p + geom_point(alpha = 0.5)
setwd("/Users/Zeyu/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_reactivity_test")
load(file = "../rda_data/satDF_one.rda")
dataset = subset(satDF_one, select = c(State, expend, sat, region, population))
p <- ggplot(dataset, aes(x = expend, y = sat, size = sqrt(population/pi),
colour = region,
label = State))
p + geom_point(alpha = 0.5)
load(file = "../rda_data/satDF_one.rda")
dataset = subset(satDF_one, select = c(State, expend, sat, region, population))
dataset
dataset = subset(satDF_one, select = c(State, expend, sat, region, population))
p <- ggplot(dataset, aes(x = expend, y = sat, size = sqrt(population/pi),
colour = region,
label = State))
p + geom_point(alpha = 0.5)
View(satDF_one)
View(satDF_one)
load("../rda_data/satDF_one.rda")
satDF_one[, c(input$x_1, input$y_1, population)]
satDF_one[, c(region, population)]
class(satDF_one$population)
class(satDF_one$region)
dataset = subset(satDF_one, select = c(State, x = expend, y = sat, region, population))
dataset
dataset = satDF_one[, c(State, x = expend, y = sat, region, population)]
dataset = satDF_one[, c("State", x = expend, y = sat, "region", "population")]
satDF_one
dataset = satDF_one[, c("State", x = "expend", y = "sat", "region", "population")]
dataset$x
dataset = satDF_one[, c("State", "expend", "sat", "region", "population")]
dataset
p <- ggplot(dataset, aes(x = expend, y = sat, size = sqrt(population/pi),
colour = region,
label = State))
p <- ggplot(dataset, aes(x = expend, y = sat, size = sqrt(population/pi),
colour = region,
label = State))
p + geom_point(alpha = 0.5)
identical(satDF_one$expend, satDF_new$Expenditure|satDF_one$expend)
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_html_plot1/")
library(shiny)
runApp("side_by_side_scatterplot/")
data.frame(x = sat_one$expend)
load("../rda_data/satDF_one.rda")
data.frame(x = sat_one$expend)
data.frame(x = satDF_one$expend)
satDF_one$expend)
satDF_one$expen
selectedData[input$x_1]
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_html_plot1/")
fluidPage(
# Application title
titlePanel("SAT Scores"),
# inputs
fluidRow(
column(width = 4,
selectInput("x_1", "Choose an x variable:",
choices = list("Expenditure Per Pupil" = "Expenditure",
"Student-Teacher Ratio" = "Student-Teacher Ratio",
"Teacher Salary" = "Teacher Salary",
"Eligible Student Fraction" = "Eligible Student Fraction"),
selected = "Teacher Salary"),
selectInput("y_1", "Choose a y variable",
choices = list("SAT Verbal Score" = "SAT Verbal Score",
"SAT Math Score" = "SAT Math Score",
"SAT Total Score" = "SAT Total Score"),
selected = "SAT Total Score")
),
column(width = 4,
offset = 3,
selectInput("x_2", "Choose an x variable:",
choices = list("Expenditure Per Pupil" = "Expenditure",
"Student-Teacher Ratio" = "Student-Teacher Ratio",
"Teacher Salary" = "Teacher Salary",
"Eligible Student Fraction" = "Eligible Student Fraction"),
selected = "Teacher Salary"),
selectInput("y_2", "Choose a y variable",
choices = list("SAT Verbal Score" = "SAT Verbal Score",
"SAT Math Score" = "SAT Math Score",
"SAT Total Score" = "SAT Total Score"),
selected = "SAT Total Score")
)
),
fluidRow(
column(width = 6,
# h3(textOutput("caption")),
plotOutput("scatterPlot_1")
),
column(width = 6,
plotOutput("scatterPlot_2")
)
)
)
fluidPage(
# Application title
titlePanel("SAT Scores"),
# inputs
fluidRow(
column(width = 4,
selectInput("x_1", "Choose an x variable:",
choices = list("Expenditure Per Pupil" = "Expenditure",
"Student-Teacher Ratio" = "Student-Teacher Ratio",
"Teacher Salary" = "Teacher Salary",
"Eligible Student Fraction" = "Eligible Student Fraction"),
selected = "Teacher Salary"),
selectInput("y_1", "Choose a y variable",
choices = list("SAT Verbal Score" = "SAT Verbal Score",
"SAT Math Score" = "SAT Math Score",
"SAT Total Score" = "SAT Total Score"),
selected = "SAT Total Score")
),
column(width = 4,
offset = 3,
selectInput("x_2", "Choose an x variable:",
choices = list("Expenditure Per Pupil" = "Expenditure",
"Student-Teacher Ratio" = "Student-Teacher Ratio",
"Teacher Salary" = "Teacher Salary",
"Eligible Student Fraction" = "Eligible Student Fraction"),
selected = "Teacher Salary"),
selectInput("y_2", "Choose a y variable",
choices = list("SAT Verbal Score" = "SAT Verbal Score",
"SAT Math Score" = "SAT Math Score",
"SAT Total Score" = "SAT Total Score"),
selected = "SAT Total Score")
)
),
fluidRow(
column(width = 6,
# h3(textOutput("caption")),
plotOutput("scatterPlot_1")
),
column(width = 6,
plotOutput("scatterPlot_2")
)
)
)
library(shiny)
fluidPage(
# Application title
titlePanel("SAT Scores"),
# inputs
fluidRow(
column(width = 4,
selectInput("x_1", "Choose an x variable:",
choices = list("Expenditure Per Pupil" = "Expenditure",
"Student-Teacher Ratio" = "Student-Teacher Ratio",
"Teacher Salary" = "Teacher Salary",
"Eligible Student Fraction" = "Eligible Student Fraction"),
selected = "Teacher Salary"),
selectInput("y_1", "Choose a y variable",
choices = list("SAT Verbal Score" = "SAT Verbal Score",
"SAT Math Score" = "SAT Math Score",
"SAT Total Score" = "SAT Total Score"),
selected = "SAT Total Score")
),
column(width = 4,
offset = 3,
selectInput("x_2", "Choose an x variable:",
choices = list("Expenditure Per Pupil" = "Expenditure",
"Student-Teacher Ratio" = "Student-Teacher Ratio",
"Teacher Salary" = "Teacher Salary",
"Eligible Student Fraction" = "Eligible Student Fraction"),
selected = "Teacher Salary"),
selectInput("y_2", "Choose a y variable",
choices = list("SAT Verbal Score" = "SAT Verbal Score",
"SAT Math Score" = "SAT Math Score",
"SAT Total Score" = "SAT Total Score"),
selected = "SAT Total Score")
)
),
fluidRow(
column(width = 6,
# h3(textOutput("caption")),
plotOutput("scatterPlot_1")
),
column(width = 6,
plotOutput("scatterPlot_2")
)
)
)
setwd("~/Dropbox/Senior_Research/Stat_Summer15_Research/DynDocs/SAT/shiny_html_plot1/")
library(shiny)
runApp("side_by_side_scatterplot/")
